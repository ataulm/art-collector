apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

buildProperties {
    harvard {
        using rootProject.file('harvard.properties')
    }
    signingDebug {
        using rootProject.file('signing-debug.properties')
    }
}

android {
    compileSdkVersion versions.androidSdk.compile

    defaultConfig {
        applicationId 'com.ataulm.artcollector'
        minSdkVersion versions.androidSdk.min
        targetSdkVersion versions.androidSdk.target
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        buildConfigString 'HARVARD_KEY', buildProperties.harvard['apiKey'].string
    }

    signingConfigs {
        debug {
            storeFile file(buildProperties.signingDebug['storeFile'].or('/absolute/path/to/keystore/file').string)
            storePassword buildProperties.signingDebug['storePassword'].or('password').string
            keyAlias buildProperties.signingDebug['keyAlias'].or('keyalias').string
            keyPassword buildProperties.signingDebug['keyPassword'].or('keypassword').string
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro',
                    'proguard-rules-moshi.pro',
                    'proguard-rules-moshi-kotlin.pro',
                    'proguard-rules-retrofit.pro'
        }
    }

    dynamicFeatures = [':artist', ':painting']
}

dependencies {
    api libraries.androidArchLifecycleExtensions
    api libraries.constraintLayout
    api libraries.dagger
    api libraries.glide
    api libraries.kotlinCoroutinesAndroid
    api libraries.kotlinCoroutinesCore
    api libraries.kotlinStdLib
    api libraries.supportAppCompatV7
    api libraries.supportDesign
    api libraries.supportRecyclerView
    api libraries.supportV13

    debugImplementation libraries.chuck
    releaseImplementation libraries.chuckNoOp
    implementation libraries.moshi
    implementation libraries.retrofit
    implementation libraries.retrofitMoshi
    implementation libraries.retrofitKotlinCoroutines

    kapt libraries.daggerAndroid
    kapt libraries.daggerCompiler
    kapt libraries.moshiKotlinCodegen

    // Android runner and rules support
    androidTestImplementation(libraries.androidTestRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    androidTestImplementation(libraries.androidTestRules) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    // Espresso support
    androidTestImplementation(libraries.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    testImplementation libraries.googleTruth
    testImplementation libraries.jUnit
    testImplementation libraries.mockitoCore
    testImplementation libraries.mockitoKotlin
}
